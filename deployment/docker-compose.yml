version: '3.3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    hostname: zookeeper
  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: acit3855-kafla.eastus2.cloudapp.azure.com # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://acit3855-kafla.eastus2.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'Password'
      MYSQL_ROOT_PASSWORD: 'Password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql
  receiver:
    container_name: my-receiver
    build: ./recevier
    ports:
      - "8080:8080"
    restart: on-failure
  storage:
    container_name: my-storage
    build: ./storage
    ports:
      - "8090:8090"
  processing:
    container_name: my-processor
    build: ./processing
    ports:
      - "8100:8100"
  audit:
    container_name: my-aduitor
    build: ./audit_log
    ports:
      - "8110:8110"

# Names our volume
volumes:
  my-db:
